This folder contains the Radar-Augmented MANPADS Engagement DEVS model implemented in Cadmium and a converter application allowing the user to visualize the Cadmium outputs into Systems Tool Kit (STK).

/**************************/
/****FILES ORGANIZATION****/
/**************************/

makefile
SYSC 5104 - Term Project Report - Francoise Blanc.docx
Radar_MANPADS_Engagement.xml
README.txt	

atomics [This folder contains atomic models implemented in Cadmium]
				\atomics\aircraft.hpp
				\atomics\c2.hpp
				\atomics\gunner.hpp
				\atomics\missile.hpp
				\atomics\radar.hpp

bin [This folder will be created automatically the first time you compile the project. It will contain the executables for the DEVS model, the tests, and the converter application.]

build [This folder will be created automatically the first time you compile the project. It will contain the build files (.o) generated during compilation.]

converter [This folder contains the converter application source code]
				\converter\sim_converter.c
				\converter\sim_converter.h

data_structures [This folder contains the message data structure used in the DEVS model.]
				\data_structures\message.cpp
				\data_structures\message.hpp

input_data [This folder contains the input data to run tests and experiments.]
				\input_data\ads_input_test.txt
				\input_data\aircraft_input_test.txt
				\input_data\aircraft_input_test_t2.txt
				\input_data\c2_detected_position_input_test.txt
				\input_data\c2_detected_position_input_test_t2.txt
				\input_data\c2_detected_position_input_test_t3.txt
				\input_data\c2_detected_position_input_test_t4.txt
				\input_data\c2_detected_position_input_test_t5.txt
				\input_data\c2_detected_position_input_test_t6.txt
				\input_data\c2_gunner_status_input_test.txt
				\input_data\c2_gunner_status_input_test_t2.txt
				\input_data\c2_gunner_status_input_test_t3.txt
				\input_data\c2_gunner_status_input_test_t4.txt
				\input_data\c2_gunner_status_input_test_t5.txt
				\input_data\c2_gunner_status_input_test_t6.txt
				\input_data\c2_missile_status_input_test.txt
				\input_data\c2_missile_status_input_test_t2.txt
				\input_data\c2_missile_status_input_test_t3.txt
				\input_data\c2_missile_status_input_test_t4.txt
				\input_data\c2_missile_status_input_test_t5.txt
				\input_data\c2_missile_status_input_test_t6.txt
				\input_data\engagement_parameters.txt
				\input_data\gunner_order_input_test _t2.txt
				\input_data\gunner_order_input_test.txt
				\input_data\missile_input_test.txt
				\input_data\missile_input_test_t2.txt
				\input_data\radar_input_test.txt
	
model [This folder contains the Radar Augmented MANPADS Engagement top model]
				\model\radar_MANPADS_engagement.cpp

simulation_results [This folder will be created automatically the first time you compile the project. It will store the outputs from your simulation, tests and conversion.]

STK_results [This folder contains the generated STK scenario and twos videos showing the autogeneration and the visualization of the STK scenario based on the DEVS simulation results of the Radar Manpads Engagement DEVS model using the parameters defined in this file: \input_data\engagement_parameters.txt]
				\STK_results\accelerated_stk_scenario_autogenerated.mp4
				\STK_results\experiment1_scenario.vdf
				\STK_results\experiment1_video.mp4

test [This folder contains the atomic and coupled tests.]
				\test\ads_test.cpp
				\test\aircraft_test.cpp
				\test\c2_test.cpp
				\test\gunner_test.cpp
				\test\missile_test.cpp
				\test\radar_test.cpp
	
urslib [This folder contains functions supporting the DEVS model]  
				\usrlib\engagementUtils.cpp
				\usrlib\engagementUtils.hpp


/*************/
/****STEPS****/
/*************/

0 - The document "SYSC 5104 - Term Project Report - Francoise Blanc.docx" contains the project report. It provides detailed information about the DEVS model. It also describes the implementation steps converting Cadmium simulation results into a text file containing STK Connect commands to autogenerate an STK scenario to visualize the simulation results.

1 - Update include path in the makefile in this folder and subfolders. You need to update the following lines:

				INCLUDECADMIUM=-I ../../cadmium/include
				INCLUDEDESTIMES=-I ../../DESTimes/include
				INCLUDEJSON=-I ../../CadmiumModelJSONExporter/include
				Update the relative path to cadmium/include from the folder where the makefile is. You need to take into account where you copied the folder during the installation process.
				Example: INCLUDECADMIUM=-I ../../cadmium/include
				Do the same for the DESTimes and CadmiumModelJSONExporter libraries.
	
2 - Compile the project:

	2.1 - Open the terminal (Ubuntu terminal for Linux and Cygwin for Windows) in the "term_project" main folder
	2.2 - To compile the project, type in the terminal:
				make clean; make all

3 - Run tests:

	3.1 - The test executables in the bin directory are:
        	    a. ADS_TEST.exe
        	    b. AIRCRAFT_TEST.exe
				c. C2_TEST.exe
        	    d. GUNNER_TEST.exe
        	    e. MISSILE_TEST.exe
        	    f. RADAR_TEST.exe
	
	3.2 - Open the terminal in the bin folder.
	
	3.3 - To run an individual test, type in the terminal "./NAME_OF_THE_COMPILED_FILE".
	
				For example, if you wish to test the aircraft atomic model, you would type the following:
                ./AIRCRAFT_TEST
	
	3.4 - Each test has an optional ability to specify an options file as the first command line parameter. This allows the user to change the parameters of the mission scenario.
				./AIRCRAFT_TEST ../input_data/engagement_parameters.txt
    
	3.5 - To check the output results of the test, go to the folder simulation_results and open the appropriate output_messages and output_state files.
				For example, if you run AIRCRAFT_TEST, the files containing the test's results will be "aircraft_test_output_messages.txt" and "aircraft_test_output_state.txt".
    
	3.6 - The input data to run the individual tests are found in the input_data folder. The tests are set to run the input data file for test case #1. The input data for the other test cases are also included in the input data folder but are named differently (e.g., if there is a test case #2 for a specific model, the input data file will be indicated by "t2").

4 - Run the top model (RADAR_MANPADS_ENGAGEMENT)

    4.1 - Open the terminal (Ubuntu terminal for Linux and Cygwin for Windows) in the bin folder.
	
	4.2 - To run the model, type in the terminal "./RADAR_MANPADS_ENGAGEMENT". No input data is required as this model is self-contained.
	
	The simulation will run using the default mission scenario parameters:
				
				AIRCRAFT_INITIAL_POSITION_LAT=-31.30905
				AIRCRAFT_INITIAL_POSITION_LONG=136.44974
				AIRCRAFT_FINAL_POSITION_LAT=-30.85932
				AIRCRAFT_FINAL_POSITION_LONG=136.44974
				AIRCRAFT_SPEED=60.0
				AIRCRAFT_ALTITUDE=300.0
				RADAR_POSITION_LAT=-31.07870
				RADAR_POSITION_LONG=136.47326
				RADAR_RANGE=20000.0
				C2_POSITION_LAT=-31.05130
				C2_POSITION_LONG=136.46076
				GUNNER_POSITION_LAT_ID1=-31.05007
				GUNNER_POSITION_LONG_ID1=136.42800
				MISSILE_POSITION_LAT_ID1=-31.0504
				MISSILE_POSITION_LONG_ID1=136.428
				GUNNER_POSITION_LAT_ID2=-31.03852
				GUNNER_POSITION_LONG_ID2=136.44373
				MISSILE_POSITION_LAT_ID2=-31.03830
				MISSILE_POSITION_LONG_ID2=136.44394
				GUNNER_POSITION_LAT_ID3=-31.03363
				GUNNER_POSITION_LONG_ID3=136.46193
				MISSILE_POSITION_LAT_ID3=-31.03361
				MISSILE_POSITION_LONG_ID3=136.46159
				MISSILE_NUMBER_ID1=4
				MISSILE_NUMBER_ID2=4
				MISSILE_NUMBER_ID3=4
				MISSILE_POH_4_6=0
				MISSILE_POH_1_4=0
				MISSILE_POH_0_1=0
		
	4.3 - To run your own experiments using different parameters than the default values, follow these steps:
				a. Amend the file "engagement_parameters.txt" with your own parameters. This file is located in the "input_data" folder. It is important to leave no extra spaces when amending the default values. Also note that the simulation time is set to 15 minutes. For longer engagement scenario, the simulation time must be changed in the model.
				b. Open the terminal (Ubuntu terminal for Linux and Cygwin for Windows) in the bin folder.
				c. Type in the terminal "./RADAR_MANPADS_ENGAGEMENT ../input_data/engagement_parameters.txt". 
		
	4.4 - To check the output results of the model, go to the folder simulation_results and open the following files:
				"radar_MANPADS_engagement_output_messages.txt"
				"radar_MANPADS_engagement_output_state.txt"
	If you want to keep the simulation results, ensure to rename your output files. Otherwise, they will be overwritten when you run the next simulation.

5 - View simulation results into STK
	
	5.1 - Convert the Cadmium results into STK Connect commands
				a. Open the terminal (Ubuntu terminal for Linux and Cygwin for Windows) in the bin folder.
				b. Type in the terminal "./SIM_CONVERTER"
				c. This will convert the "radar_MANPADS_engagement_output_messages.txt" (mentioned at para 4.4) into a text file containing the STK Connect commands. To check out the generated text file, go to the folder simulation_results folder and open this file: "stk_connect_commands.txt".
				
	5.2 - STK Installation
				a. Using STK requires a license. Student license can be requested through the Mechanical and Aerospace Engineering Department at Carleton University (POC: Bruce Burlton). Free trial options are also offered when visiting AGI website (https://licensing.agi.com/stk/).
				
	5.3 - Open STK Application
				IMPORTANT - STK must be running before proceeding with the next step.
	
	5.4 - Load data into STK via AGIPCEXP
				a. Open the Windows command line terminal and change directory to the bin folder of your STK installation (e.g. C:\Program Files\AGI\STK 12\bin).
				b. Type in the terminal "AGIPCEXP -t localhost:5001 < absolute_path_to_stk_connect_command.txt_file". 
						- 5001 is the default socket
						- Ensure that the path does not contain any spaces
				c. Once AGIPCEXP has finished executing the STK Connect commands stored in the text file, the STK scenario is ready to use.
				d. See available videos in the folder \STK_results:
					1. Accelerated video of data loaded into STK using AGIPCEXP (filename: accelerated_stk_scenario_autogenerated.mp4)
					2. Video of the DEVS outputs using the STK scenario (filename: experiment1_video.mp4)
					
